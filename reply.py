from telegram import InlineKeyboardMarkup, InlineKeyboardButton, Update
from telegram.ext import ContextTypes

from config import BOT_USERNAME
from const_strings import ADMIN
from keyboards import HOME_KBD, CABINET_KBD, BILLING_KBD, ADMIN_KBD, TELEGRAM_KBD, PARTNERSHIP_KBD, SHOPPING_CART_KBD, \
    TELEGRAM_TDATA_KBD, TELEGRAM_SESSION_KBD
from users.common import is_admin


async def home_reply(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user = update.effective_user
    admin = is_admin(user)

    if admin:
        admin_btn_exists = False
        for i in HOME_KBD[0]:
            if i.callback_data == ADMIN:
                admin_btn_exists = True
                break

        if not admin_btn_exists:
            HOME_KBD[0].append(InlineKeyboardButton("Admin", callback_data=ADMIN))
    reply_markup = InlineKeyboardMarkup(HOME_KBD)

    query = update.callback_query
    if query is not None:
        await query.edit_message_text(f"¬´Welcome to {BOT_USERNAME} 24/7¬ª\n"\
            f"üÜîTelegram ID: {user.id}\n"         
            f"üí∞–í–∞—à –±–∞–ª–∞–Ω—Å: 0 PLN.\n"  # TODO –¥–æ–±–∞–≤–∏—Ç—å –±–∞–ª–∞–Ω—Å
            f"üî∞–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∫—É–ø–æ–∫: 0\n", reply_markup=reply_markup)
    else:
        await update.effective_user.send_message(f"¬´Welcome to {BOT_USERNAME} 24/7¬ª\n"\
            f"üÜîTelegram ID: {user.id}\n"         
            f"üí∞–í–∞—à –±–∞–ª–∞–Ω—Å: 0 PLN.\n"  # TODO –¥–æ–±–∞–≤–∏—Ç—å –±–∞–ª–∞–Ω—Å
            f"üî∞–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∫—É–ø–æ–∫: 0\n", reply_markup=reply_markup)



# TODO CABINET


async def cabinet_reply(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user = update.effective_user
    query = update.callback_query
    reply_markup = InlineKeyboardMarkup(CABINET_KBD)
    await query.edit_message_text(f"¬´Welcome to {BOT_USERNAME} 24/7¬ª\n"\
            f"üÜîTelegram ID: {user.id}\n"         
            f"üí∞–í–∞—à –±–∞–ª–∞–Ω—Å: 0 PLN.\n"  # TODO –¥–æ–±–∞–≤–∏—Ç—å –±–∞–ª–∞–Ω—Å
            f"üî∞–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∫—É–ø–æ–∫: 0\n"  # TODO –¥–æ–±–∞–≤–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∫—É–ø–æ–∫
            f"üíé–°—Ç–∞—Ç—É—Å: –ù–∞–±–ª—é–¥–∞—Ç–µ–ª—å\n", reply_markup=reply_markup)


async def billing_reply(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    query = update.callback_query
    reply_markup = InlineKeyboardMarkup(BILLING_KBD)
    await query.edit_message_text(f"–≤—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ã", reply_markup=reply_markup)


async def my_purchases_reply(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    query = update.callback_query
    await query.edit_message_text(f"—Ç—É—Ç –±—É–¥–µ—Ç —Å–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö –ø–æ–∫—É–ø–æ–∫")


async def shopping_cart_reply(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    query = update.callback_query
    await query.edit_message_text(f"–≤–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞")


async def back_home_reply(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await home_reply(update, context)


async def back_cabinet_reply(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await cabinet_reply(update, context)

#TODO TELEGRAM


async def telegram_reply(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    query = update.callback_query
    reply_markup = InlineKeyboardMarkup(TELEGRAM_KBD)
    await query.edit_message_text(f"–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ä–º–∞—Ç", reply_markup=reply_markup)


async def telegram_tdata_reply(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    query = update.callback_query
    reply_markup = InlineKeyboardMarkup(TELEGRAM_TDATA_KBD)
    await query.edit_message_text(f"–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É –∞–∫–∫–∞—É–Ω—Ç–∞", reply_markup=reply_markup)


async def telegram_session_reply(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    query = update.callback_query
    reply_markup = InlineKeyboardMarkup(TELEGRAM_SESSION_KBD)
    await query.edit_message_text(f"–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É –∞–∫–∫–∞—É–Ω—Ç–∞", reply_markup=reply_markup)


async def telegram_tdata_usa_reply(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    query = update.callback_query
    await query.edit_message_text(f"Telegram –∞–∫–∫–∞—É–Ω—Ç GHANNA (+233) —Å –æ—Ç–ª–µ–∂–∫–æ–π /n —Ñ–æ—Ä–º–∞—Ç tdata /n –≤ –Ω–∞–ª–∏—á–∏–∏ –µ—Å—Ç—å *** /n –≤—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ")


async def telegram_tdata_ghana_reply(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    query = update.callback_query
    await query.edit_message_text(f"Telegram –∞–∫–∫–∞—É–Ω—Ç GHANNA (+233) —Å –æ—Ç–ª–µ–∂–∫–æ–π /n —Ñ–æ—Ä–º–∞—Ç tdata /n –≤ –Ω–∞–ª–∏—á–∏–∏ –µ—Å—Ç—å *** /n –≤—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ")


async def telegram_session_ru_reply(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    query = update.callback_query
    await query.edit_message_text(f"Telegram –∞–∫–∫–∞—É–Ω—Ç RU(+7) —Å –æ—Ç–ª–µ–∂–∫–æ–π /n —Ñ–æ—Ä–º–∞—Ç session /n –≤ –Ω–∞–ª–∏—á–∏–∏ –µ—Å—Ç—å *** /n –≤—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ")


async def back_telegram_reply(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await telegram_reply(update, context)


async def admin_reply(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    query = update.callback_query
    reply_markup = InlineKeyboardMarkup(ADMIN_KBD)
    await query.edit_message_text(f"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –≤ –ü–∞–Ω–µ–ª–∏ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞", reply_markup=reply_markup)


async def partnership_replay(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    query = update.callback_query
    reply_markup = InlineKeyboardMarkup(PARTNERSHIP_KBD)
    await query.edit_message_text(f"–ø–æ –ª—é–±—ã–º –≤–æ–ø—Ä–æ—Å–∞–º —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞ –ø–∏—Å–∞—Ç—å –∞–¥–º–∏–Ω—É: @real2021money", reply_markup=reply_markup)


async def shopping_cart_reply(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    query = update.callback_query
    reply_markup = InlineKeyboardMarkup(SHOPPING_CART_KBD)
    await query.edit_message_text(f"–≤ –≤–∞—à–µ–π –∫–æ—Ä–∑–∏–Ω–µ *** —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ —Å—É–º–º—É *** ", reply_markup=reply_markup)